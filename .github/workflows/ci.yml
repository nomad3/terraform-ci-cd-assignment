name: ci

on:
  pull_request:
  push:
    branches: [ main ]
  workflow_dispatch:

concurrency:
  group: terraform-ci-${{ github.ref }}
  cancel-in-progress: false

jobs:
  fmt_validate:
    name: fmt-validate
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.5

      - name: Terraform Format (check)
        run: terraform fmt -check -recursive

      - name: Terraform Init (no backend)
        run: terraform init -backend=false -input=false

      - name: Terraform Validate
        run: terraform validate

  lint_scan:
    name: tflint-checkov
    runs-on: ubuntu-latest
    needs: [ fmt_validate ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.5

      - name: Install tflint
        uses: terraform-linters/setup-tflint@v4
        with:
          tflint_version: v0.53.0

      - name: TFLint Init
        run: tflint --init

      - name: TFLint Run
        run: tflint -f compact

      - name: Install Checkov
        run: pipx install checkov

      - name: Checkov Scan
        run: checkov -d . --framework terraform --quiet --compact

  terratest:
    name: terratest-localstack
    runs-on: ubuntu-latest
    needs: [ fmt_validate ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22.x'

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.5

      - name: Temporarily disable remote backend
        run: |
          if [ -f backend.tf ]; then mv backend.tf backend.tf.bak; fi

      - name: Start LocalStack
        run: |
          docker run -d --name localstack_main \
            -p 4566:4566 -p 4510-4559:4510-4559 \
            -e SERVICES=lambda,ssm,iam,sts,logs,cloudwatch \
            -v /var/run/docker.sock:/var/run/docker.sock \
            localstack/localstack

      - name: Wait for LocalStack
        run: |
          for i in {1..30}; do curl -s http://localhost:4566/_localstack/health && break || sleep 2; done

      - name: Run Terratest
        env:
          LOCALSTACK: '1'
          AWS_ACCESS_KEY_ID: test
          AWS_SECRET_ACCESS_KEY: test
          AWS_REGION: eu-west-2
        run: |
          go mod download
          go test ./test -v -timeout 45m

      - name: Restore backend file
        if: always()
        run: |
          if [ -f backend.tf.bak ]; then mv backend.tf.bak backend.tf; fi

  plan:
    if: github.event_name == 'pull_request'
    name: terraform-plan
    runs-on: ubuntu-latest
    needs: [ fmt_validate, lint_scan, terratest ]
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.5

      - name: Terraform Init (backend)
        run: terraform init -input=false

      - name: Terraform Plan
        run: terraform plan -input=false

  apply:
    if: github.ref == 'refs/heads/main' && (github.event_name == 'push' || github.event_name == 'workflow_dispatch')
    name: terraform-apply
    runs-on: ubuntu-latest
    needs: [ fmt_validate, lint_scan, terratest ]
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.5

      - name: Terraform Init (backend)
        run: terraform init -input=false

      - name: Terraform Apply
        run: terraform apply -auto-approve -input=false
